#!/bin/bash
set -e

HOST_ARCH=$(uname -m)
if [ "$HOST_ARCH" = "x86_64" ]; then
    ARCH="amd64"
elif [ "$HOST_ARCH" = "aarch64" ]; then
    ARCH="arm64"
fi

declare -A qemuarch=( ["amd64"]="x86_64" ["arm"]="arm" ["arm64"]="aarch64" )
declare -A ttycons=( ["amd64"]="ttyS0" ["arm"]="ttyAMA0" ["arm64"]="ttyAMA0" )
declare -A machine=( ["amd64"]="-enable-kvm" ["arm"]="-M virt" ["arm64"]="-M virt" )
declare -A cpu=( ["amd64"]="-cpu host" ["arm"]="-cpu cortex-a8" ["arm64"]="-cpu cortex-a57" )
declare -A network=(
    ["amd64"]="-net nic,vlan=0,model=virtio -net user,vlan=0,hostfwd=tcp::2222-:22,hostname=rancher-dev"
    ["arm"]="-netdev user,id=unet,hostfwd=tcp::2222-:22,hostname=rancher-dev -device virtio-net-device,netdev=unet"
)
network["arm64"]=${network["arm"]}

SUFFIX=""
if [ -n "${ARCH}" ] && [ "${ARCH}" != "amd64" ]; then
    SUFFIX="_${ARCH}"
fi

BUILD=build
BASE=$(pwd)
UNAME=$(uname)

KERNEL=${BASE}/build/kernel/vmlinuz${SUFFIX}
INITRD_SRC=${BASE}/build/initrd
INITRD=${BASE}/build/initrd.tmp


QEMU=1
FORMAT=1
RM_USR=1
REBUILD=1

QEMUARCH=${qemuarch["${ARCH}"]}
TTYCONS=${ttycons["${ARCH}"]}
NETWORK="${network["$ARCH"]}"
MACHINE="${machine["$ARCH"]}"
CPU="${cpu["$ARCH"]}"


DEFAULT_KERNEL_ARGS="printk.devkmsg=on console=${TTYCONS}"
