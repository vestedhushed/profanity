#!/bin/bash
set -e

mkdir -p ${ROOTFS_DIR}

# Override using a local rootfs build
if [ -e ${DAPPER_SOURCE}/assets/rootfs.tar.xz ]; then
    echo "copying ${DAPPER_SOURCE}/assets/rootfs.tar.xz ${DOWNLOADS}/rootfs.tar.xz"
    cp ${DAPPER_SOURCE}/assets/rootfs.tar.xz ${DOWNLOADS}/rootfs.tar.xz
else
    curl -fL ${!ROOTFS_URL} -o ${DOWNLOADS}/rootfs.tar.xz
fi

tar xf ${DOWNLOADS}/rootfs.tar.xz -C ${ROOTFS_DIR}

cp -rf assets/rootfs/* ${ROOTFS_DIR}/

# override the os-release file
cat assets/rootfs/etc/os-release | envsubst > ${ROOTFS_DIR}/etc/os-release

# add k3os binary
cp bin/k3os ${ROOTFS_DIR}/usr/bin/

# add syslinux binary
if [ "${ARCH}" == "amd64" ]; then
    cp ${BOOTLOADER_DIR}/bin/* ${ROOTFS_DIR}/usr/bin/
fi

# copy modprobe.d from KERNEL_DIR to rootfs
cp -rf ${KERNEL_DIR}/lib/modprobe.d ${ROOTFS_DIR}/usr/lib/

# running these scripts in the runc container
cat << EOF > ${ROOTFS_DIR}/config.sh
#!/bin/sh
mkdir -p /home/ \
         /usr/lib/modules \
         /usr/lib/firmware \
         /writable \
         /boot \
         /var/lib/k3os/conf \
         /var/lib/rancher \
         /etc/rancher \
         /etc/default \
         /var/initrd
echo "#!/bin/sh" > /etc/rc.local && chmod +x /etc/rc.local
passwd -l root
addgroup -g 1100 rancher
addgroup -g 1103 sudo
adduser -u 1100 -G rancher -D -h /home/rancher -s /bin/bash rancher
adduser rancher sudo

sed -i 's/rancher:!/rancher:*/g' /etc/shadow
echo '%sudo ALL=(ALL) ALL' >> /etc/sudoers.d/k3os
echo 'rancher ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers.d/k3os

sed -i -e 's/duid/clientid/g' /etc/dhcpcd.conf
echo "*.*                /var/log/syslog" >> /etc/rsyslog.conf

# add necessary symbol-links
ln -s /usr/bin/k3os /usr/lib/k3os/k3os-sysinit
ln -s /usr/bin/k3os /usr/lib/k3os/k3os-netinit
ln -s /usr/bin/k3os /usr/lib/k3os/k3os-ttyinit

# cleanup
rm -f /root/.bash_history
EOF
chmod +x ${ROOTFS_DIR}/config.sh

# add k3os-config.yml
bin/k3os c generate < templates/k3os-config.tpl.yml > ${ROOTFS_DIR}/etc/k3os-config.yml

# construct rootfs via runc
pushd ${BUILD}

# TODO: we should generate the runc spec file
#runc spec
#sed -i 's/"readonly": true/"readonly": false/g' config.json
#sed -i 's/"sh"/"\/config.sh"/g' config.json
cp ../scripts/runc-spec/rootfs-config.json config.json
runc run build-rootfs
popd

# cleanup
rm -f ${ROOTFS_DIR}/config.sh
rm -f ${ROOTFS_DIR}/etc/group-
rm -f ${ROOTFS_DIR}/etc/shadow-
rm -f ${ROOTFS_DIR}/etc/passwd-
rm -f ${ROOTFS_DIR}/etc/k3os-
