#!/bin/sh
#
# TODO:
# 1. Something went wrong. Dropping you to a shell. (rescue_shell)
#

# Mount the /proc and /sys filesystems.
mkdir -p /proc && mount -t proc proc /proc
mkdir -p /sys && mount -t sysfs sysfs /sys
mkdir -p /dev && mount -t devtmpfs devtmpfs /dev
mkdir -p /dev/pts /dev/shm

export ROOT
# Parse command line options
for x in $(cat /proc/cmdline); do
    case $x in
        root=*)
            ROOT=${x#root=}
            ;;
    esac
done

#
# TODO: we should build a smaller modules for initrd
#
mkdir -p /state /lib/modules
mount -t squashfs -o loop /modules.squashfs /lib/modules

# start udev
udevd -d
udevadm trigger --action=add
udevadm settle

if [[ ! -e /dev/disk/by-label/RANCHER_STATE && ! -z "${ROOT}" ]]; then
    echo "********Please Wait For Formatting ${ROOT}********"
    parted -s ${ROOT} mklabel gpt
    parted -s ${ROOT} mkpart primary ext4 0% 100%
    PARTITION=${ROOT}1
    if [[ "${ROOT}" == *"nvme"* ]]; then
        PARTITION=${ROOT}p1
    fi
    mkfs.ext4 -F -L RANCHER_STATE ${PARTITION}
    echo "********Done ${ROOT}********"
fi

# stop udev
udevadm control --stop-exec-queue
udevadm control --exit

export INITRD_DIR=var/initrd
export HASH_ID=$(cat /.id)
export WRITABLE_INITRD_DIR=/writable/system-data/${INITRD_DIR}/${HASH_ID}
if [ -e /dev/disk/by-label/RANCHER_STATE ]; then
    echo "********Found RANCHER_STATE Partition********"
    mkdir /writable
    mount LABEL=RANCHER_STATE /writable
    if [ ! -d "${WRITABLE_INITRD_DIR}" ]; then
        mkdir -p ${WRITABLE_INITRD_DIR}
        mv /*.squashfs ${WRITABLE_INITRD_DIR}
    fi
    mount -t squashfs -o loop ${WRITABLE_INITRD_DIR}/rootfs.squashfs /state
    mount -t squashfs -o loop ${WRITABLE_INITRD_DIR}/firmware.squashfs /state/usr/lib/firmware
    umount /lib/modules
    mount -t squashfs -o loop ${WRITABLE_INITRD_DIR}/modules.squashfs /state/usr/lib/modules
    mount -n -o move /writable /state/writable
    mount -o bind /state/${WRITABLE_INITRD_DIR} /state/${INITRD_DIR}
else
    echo "********Not Found RANCHER_STATE Partition********"
    mount -t squashfs -o loop /rootfs.squashfs /state
    mount -t squashfs -o loop /firmware.squashfs /state/usr/lib/firmware
    mount -n -o move /lib/modules /state/usr/lib/modules
fi

# make etc of rootfs as a tmpfs
mkdir -p /tmp/etc
cp -rf /state/etc/* /tmp/etc
mount -t tmpfs -o mode=755 tmpfs /state/etc
mv /tmp/etc/* /state/etc/

# don't leak too much of env
unset ROOT
unset INITRD_DIR
unset HASH_ID
unset WRITABLE_INITRD_DIR

# mount move
mount -n -o move /proc /state/proc
mount -n -o move /sys /state/sys
mount -n -o move /dev /state/dev

# Boot the real thing.
exec switch_root /state /sbin/init
